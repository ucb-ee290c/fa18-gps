#!/bin/bash

set -e
set -o pipefail

# Parse the command-line arguments
unset input
unset output
unset config
while [[ "$1" != "" ]]
do
    case $1 in
    *.d)  input="$1";;
    "-o")  output="$2"; shift;;
    "--config") config="$2"; shift;;
    *)     echo "Unable to parse argument $1"; exit 1;;
    esac

    shift
done

if [[ "$output" == "" || "$input" == "" ]]
then
    echo "$0: -i <input.d> -o <output.mk>"
    exit 1
fi

unset shorten_tests
case "$config" in
smoke) shorten_tests="head -n1" ;;
default) shorten_tests="cat" ;;
*) echo "Unknown simulation config $config"; exit 1;;
esac

tempdir="$(mktemp -d plsi-test-list.XXXXXX)"
trap "rm -rf $tempdir" EXIT

rm -f $output

# Walk though every Make variable in the input, as they all contain test lists.
# Since we only care about the single top-level test case, just go ahead and
# dump them all out.
grep -P '^[a-z0-9-].*=.*\\' $input | sed 's@^\([a-z0-9-]*\).*=.*\\@\1@' | $shorten_tests | while read var
do
    cat > $tempdir/Makefile <<EOF
.PHONY: all
all:
	@echo \$($var)
include $(readlink -f $input)
EOF
    make --no-print-directory -f $tempdir/Makefile | sed 's@ @\n@g' | $shorten_tests | while read test
    do
        echo "check-core: \$(CHECK_CORE_DIR)/$test.out" >> $tempdir/out
        echo "trace-core: \$(CHECK_CORE_DIR)/$test.trace-out" >> $tempdir/out
        echo "\$(CHECK_CORE_DIR)/$test.out: \$(OBJ_CORE_DIR)/riscv-tests/$test" >> $tempdir/out
        echo "\$(CHECK_CORE_DIR)/$test.trace-out: \$(OBJ_CORE_DIR)/riscv-tests/$test" >> $tempdir/out
        echo "\$(TRACE_CORE_DIR)/$test.vcd: \$(OBJ_CORE_DIR)/riscv-tests/$test" >> $tempdir/out
        echo "\$(TRACE_CORE_DIR)/$test.vpd: \$(OBJ_CORE_DIR)/riscv-tests/$test" >> $tempdir/out

        echo "check-soc: \$(CHECK_SOC_DIR)/$test.out" >> $tempdir/out
        echo "trace-soc: \$(CHECK_SOC_DIR)/$test.trace-out" >> $tempdir/out
        echo "\$(CHECK_SOC_DIR)/$test.out: \$(OBJ_CORE_DIR)/riscv-tests/$test" >> $tempdir/out
        echo "\$(CHECK_SOC_DIR)/$test.trace-out: \$(OBJ_CORE_DIR)/riscv-tests/$test" >> $tempdir/out
        echo "\$(TRACE_SOC_DIR)/$test.vcd: \$(OBJ_CORE_DIR)/riscv-tests/$test" >> $tempdir/out
        echo "\$(TRACE_SOC_DIR)/$test.vpd: \$(OBJ_CORE_DIR)/riscv-tests/$test" >> $tempdir/out

        echo "check-map: \$(CHECK_MAP_DIR)/$test.out" >> $tempdir/out
        echo "trace-map: \$(CHECK_MAP_DIR)/$test.trace-out" >> $tempdir/out
        echo "\$(CHECK_MAP_DIR)/$test.out: \$(OBJ_CORE_DIR)/riscv-tests/$test" >> $tempdir/out
        echo "\$(CHECK_MAP_DIR)/$test.trace-out: \$(OBJ_CORE_DIR)/riscv-tests/$test" >> $tempdir/out
        echo "\$(TRACE_MAP_DIR)/$test.vcd: \$(OBJ_CORE_DIR)/riscv-tests/$test" >> $tempdir/out
        echo "\$(TRACE_MAP_DIR)/$test.vpd: \$(OBJ_CORE_DIR)/riscv-tests/$test" >> $tempdir/out

        echo "check-syn: \$(CHECK_SYN_DIR)/$test.out" >> $tempdir/out
        echo "trace-syn: \$(CHECK_SYN_DIR)/$test.trace-out" >> $tempdir/out
        echo "\$(CHECK_SYN_DIR)/$test.out: \$(OBJ_CORE_DIR)/riscv-tests/$test" >> $tempdir/out
        echo "\$(CHECK_SYN_DIR)/$test.trace-out: \$(OBJ_CORE_DIR)/riscv-tests/$test" >> $tempdir/out
        echo "\$(TRACE_SYN_DIR)/$test.vcd: \$(OBJ_CORE_DIR)/riscv-tests/$test" >> $tempdir/out
        echo "\$(TRACE_SYN_DIR)/$test.vpd: \$(OBJ_CORE_DIR)/riscv-tests/$test" >> $tempdir/out

        echo "ifneq (\$(SYN_POWER_SIGNOFF_TOOL),none)" >> $tempdir/out
        echo "signoff-syn-power: \$(SIGNOFF_SYN_POWER_DIR)/$test.out" >> $tempdir/out
        echo "endif" >> $tempdir/out

        echo "check-par: \$(CHECK_PAR_DIR)/$test.out" >> $tempdir/out
        echo "trace-par: \$(CHECK_PAR_DIR)/$test.trace-out" >> $tempdir/out
        echo "\$(CHECK_PAR_DIR)/$test.out: \$(OBJ_CORE_DIR)/riscv-tests/$test" >> $tempdir/out
        echo "\$(CHECK_PAR_DIR)/$test.trace-out: \$(OBJ_CORE_DIR)/riscv-tests/$test" >> $tempdir/out
    done
done

mv $tempdir/out $output
