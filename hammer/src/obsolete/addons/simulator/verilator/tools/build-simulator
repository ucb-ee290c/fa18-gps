#!/bin/bash

set -e

verilog=()
verilogh=()
c=()
h=()
o=()
output=""
mode=""
verilator=""
top=""
include=()
i=()
while [[ "$1" != "" ]]
do
    case "$1" in
    */rocketTestHarness.v) ;;
    */TestDriver.v) ;;
    *.v) verilog+=("$1");;
    *.vh) verilogh+=("$1");;
    *.c) c+=("$1");;
    *.h) h+=("-include $1");;
    *.c++) c+=("$1");;
    *.cxx) c+=("$1");;
    *.cc) c+=("$1");;
    *.so) o+=("$1");;
    */bin/verilator) verilator="$1";;
    */plsi-include.stamp) i+=("-I$(dirname "$1")");;
    "-o") output="$2"; shift;;
    "--level") level="$2"; shift;;
    "--mode") mode="$2"; shift;;
    "--top") top="$2"; shift;;
    $0) ;;
    *) echo "Unknown argument $1" >&2; exit 2;;
    esac
    shift
done

rm -rf "$output".d

export VERILATOR_ROOT="$(dirname $(dirname "$verilator"))"
export PATH="$VERILATOR_ROOT/bin:$PATH"


echo $VERILATOR_ROOT

if [[ "$mode" == "debug" ]]
then
    debug_flags=()
    debug_flags+=("--trace")
fi

if [[ "$verilator" == "" ]]
then
    echo "No verilator binary found, pass one on the command line"
    exit 2
fi

set -e
set -x

$verilator \
    --top-module $top \
    --assert \
    -Wno-STMTDLY -Wno-WIDTH \
    --x-assign unique \
    -O3 \
    --cc --exe \
    -o "$output" \
    -CFLAGS "-std=c++11 -DVERILATOR=1 -include "$output".d/V${top}.h ${i[*]} ${h[*]}" \
    -Mdir "$output".d \
    ${debug_flags[*]} \
    ${verilogh[*]} \
    ${verilog[*]} \
    ${c[*]} \
    ${o[*]}

make -C "$output".d -f V${top}.mk

if test ! -e "$output"
then
  echo "Verilator produced no output"
  exit 1
fi
