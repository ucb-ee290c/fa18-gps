#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
#  get-config
#  Copyright 2017 Edward Wang <edward.c.wang@compdigitec.com>
#
#  Read a config from the given JSON database.

# pylint: disable=invalid-name

from __future__ import print_function

import argparse
import json
import sys

def main(args):
    database = json.load(open(args.db))
    if args.key not in database:
        if args.error_if_missing:
            print("Error: key " + args.key + " is missing and --error-if-missing is enabled",
                  file=sys.stderr)
            return 1
    else:
        value = database[args.key]
        print(args.nullvalue if value is None else str(value))
    return 0

if __name__ == '__main__':
    parser = argparse.ArgumentParser()

    parser.add_argument("-n", "--nullvalue", default="null", required=False,
                        help='Value to print out for nulls. (default: "null")')
    parser.add_argument("-e", "--error-if-missing", action='store_const',
                        const=True, default=False, required=False,
                        help="Error out if the key is missing. (default: false)")
    parser.add_argument('db', metavar='DB', type=str,
                        help='Path to the JSON database')
    parser.add_argument('key', metavar='KEY', type=str,
                        help='Key to retrieve from the database')

    sys.exit(main(parser.parse_args()))
